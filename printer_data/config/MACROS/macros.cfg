# [include MACROS/mainsail_config_macros.cfg]
# [include MACROS/filament_macros.cfg]
# [include MACROS/calibration_macros.cfg]
# [include MACROS/shell_command.cfg]
# [include MACROS/build_sheets.cfg]
# [include MACROS/part_cooling.cfg]

[include mainsail_config_macros.cfg]
[include filament_macros.cfg]
[include calibration_macros.cfg]
[include shell_command.cfg]
[include build_sheets.cfg]
[include part_cooling.cfg]

######################################################################
# Start Print and End Print
######################################################################

# Replace the slicer's custom start and end g-code scripts with
# START_PRINT and END_PRINT. See docs/Slicers.md for more information on using these macros.

# BED_MESH_CALIBRATE PROFILE=<name> METHOD=[manual | automatic | scan | rapid_scan] <br> [<probe_parameter>=<value>] [<mesh_parameter>=<value>] [ADAPTIVE=[0|1] <br> [ADAPTIVE_MARGIN=<value>]
# Default Profile: default
# Default Method: automatic if a probe is detected, otherwise manual
# Default Adaptive: 0
# Default Adaptive Margin: 0

[gcode_macro G28]
# Only home if needed.
rename_existing: G28.1
gcode:
    {% if printer.toolhead.homed_axes != "xyz" %}
        G28.1
    {% endif %}

[gcode_macro START_PRINT]
gcode:
    {% set EXTRUDER_MESH_TEMP = params.EXTRUDER_MESH_TEMP|default(170)|float %}
    
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(215)|float %}
    
    {% set BED_MESH = params.BED_MESH|default(0)|int%}
    {% set BED_MESH_PROF = params.BED_MESH_PROF|default("staticmesh")|string %}

    {% if BED_MESH == 1 %}
      PRINT_AND_BED_MESH EXTRUDER_MESH_TEMP={EXTRUDER_MESH_TEMP} BED_TEMP={BED_TEMP} EXTRUDER_TEMP={EXTRUDER_TEMP} BED_MESH_PROF={BED_MESH_PROF}
    {% else %}
      PRINT_LOAD_STATIC_MESH EXTRUDER_MESH_TEMP={EXTRUDER_MESH_TEMP} BED_TEMP={BED_TEMP} EXTRUDER_TEMP={EXTRUDER_TEMP}
    {% endif %}

[gcode_macro PRINT_LOAD_STATIC_MESH]
gcode:
    {% set EXTRUDER_MESH_TEMP = params.EXTRUDER_MESH_TEMP|default(170)|float %}
    
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(215)|float %}
    
    {% set BED_MESH_PROF = params.BED_MESH_PROF|default("staticmesh")|string %}
    
    # Use absolute coordinates
    G90
    
    # Set Extruder position
    G92 E0

    # Set printing temperature
    M109 S{EXTRUDER_TEMP}
    M190 S{BED_TEMP}
    
    # set travel acceleration
    M204 S1250
    
    # Home the printer
    G28
    
    # Mesh the bed
    BED_MESH_PROFILE LOAD={BED_MESH_PROF}
    
    # Park the toolhead near the print
    SMART_PARK
    
    # Set and wait for nozzle to reach temperature
    M109 S{EXTRUDER_TEMP}
    M190 S{BED_TEMP}
    
    # Intro KAMP line
    LINE_PURGE
    
    # Intro Manual line
    # Go to x0 y0 z0 coordinates
    # G1 X0 Y0 Z10 F3000
    # # Extrude 10 milimiters to be sure there is filament ready to print
    # G1 E10 F600
    # G1 X10 Z0.2 F1000
    # G1 X70 E8 F900
    # G1 X140 E10 F700
    # G1 Z3
    G92 E0

    # restore travel acceleration
    M204 S4000
    
    # set flow
    M221 S95

    # adjust max speed part fan
    # ADJUST_M106 MAX=70 FAN='fan'

[gcode_macro PRINT_AND_BED_MESH]
gcode:
    {% set EXTRUDER_MESH_TEMP = params.EXTRUDER_MESH_TEMP|default(170)|float %}
    
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(215)|float %}
    
    # Use absolute coordinates
    G90
    
    # Set Extruder position
    G92 E0
    
    # Set for nozzle to reach temperature
    M104 S{EXTRUDER_MESH_TEMP}
    
    # Set for the bed to reach temperature
    M140 S{BED_TEMP}
    
    # set travel acceleration
    M204 S1250
    
    # Home the printer
    G28

    # Wait to reach temps
    M109 S{EXTRUDER_MESH_TEMP}
    M190 S{BED_TEMP}
    
    # Mesh the bed
    BED_MESH_CALIBRATE ADAPTIVE=1 ADAPTIVE_MARGIN=3
    
    # Start bed heating
    M140 S{BED_TEMP}
    
    # Start extruder heating
    M104 S{EXTRUDER_TEMP}
    
    # Park the toolhead near the print
    SMART_PARK
    
    # Wait for bed to reach temperature
    # M190 S{BED_TEMP}
    
    # Set and wait for nozzle to reach temperature
    M109 S{EXTRUDER_TEMP}
    M190 S{BED_TEMP}
    
    # Intro KAMP line
    LINE_PURGE
    
    # Intro Manual line
    # Go to x0 y0 z0 coordinates
    # G1 X0 Y0 Z10 F3000
    # # Extrude 10 milimiters to be sure there is filament ready to print
    # G1 E10 F600
    # G1 X10 Z0.2 F1000
    # G1 X70 E8 F900
    # G1 X140 E10 F700
    # G1 Z3
    G92 E0

    # restore travel acceleration
    M204 S4000
    
    # set flow
    M221 S95

[gcode_macro START_PRINT_OLD]
gcode:
    {% set EXTRUDER_MESH_TEMP = params.EXTRUDER_MESH_TEMP|default(170)|float %}
    
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(215)|float %}
    
    {% set BED_MESH_PROF = params.BED_MESH_PROF|default("staticmesh")|string %}
    
    # Use absolute coordinates
    G90
    
    # Set Extruder position
    G92 E0

    # Set printing temperature
    M109 S{EXTRUDER_TEMP}
    M190 S{BED_TEMP}
    
    # Set and wait for nozzle to reach temperature
    # M104 S{EXTRUDER_MESH_TEMP}
    
    # Set and wait for the bed to reach temperature
    # M140 S{BED_TEMP}
    
    # set travel acceleration
    M204 S1250
    
    # Home the printer
    # M109 S{EXTRUDER_MESH_TEMP}
    # M190 S{BED_TEMP}
    G28
    # M104 S{EXTRUDER_TEMP}
    
    # Mesh the bed
    # BED_MESH_CALIBRATE PROFILE={BED_MESH_PROF}
    # BED_MESH_CALIBRATE ADAPTIVE=1 ADAPTIVE_MARGIN=3
    BED_MESH_PROFILE LOAD={BED_MESH_PROF}
    
    # Start bed heating
    # M140 S{BED_TEMP}
    
    # Start extruder heating
    # M104 S{EXTRUDER_TEMP}
    
    # Park the toolhead near the print
    SMART_PARK
    
    # Wait for bed to reach temperature
    # M190 S{BED_TEMP}
    
    # Set and wait for nozzle to reach temperature
    M109 S{EXTRUDER_TEMP}
    M190 S{BED_TEMP}
    
    # Intro KAMP line
    LINE_PURGE
    
    # Intro Manual line
    # Go to x0 y0 z0 coordinates
    # G1 X0 Y0 Z10 F3000
    # # Extrude 10 milimiters to be sure there is filament ready to print
    # G1 E10 F600
    # G1 X10 Z0.2 F1000
    # G1 X70 E8 F900
    # G1 X140 E10 F700
    # G1 Z3
    G92 E0

    # restore travel acceleration
    M204 S4000
    
    # set flow
    M221 S95

    # adjust max speed part fan
    # ADJUST_M106 MAX=70 FAN='fan'

[gcode_macro END_PRINT]
gcode:
    {% set Z_OFFSET = params.Z_OFFSET|default(0)|float %}
    {% set MAX_LAYER_Z = params.MAX_LAYER_Z|default(180)|float %}
    {% set MAX_PRINT_HEIGHT = params.MAX_PRINT_HEIGHT|default(180)|float %}

    { action_respond_info("[END_PRINT] Set relative coordinates") }
    # Use relative coordinates
    G91

    G1 E-5 F1000

    PARK_TOOLHEAD Z_OFFSET={Z_OFFSET} MAX_LAYER_Z={MAX_LAYER_Z} MAX_PRINT_HEIGHT={MAX_PRINT_HEIGHT}
    
    # wait 2s
    G4 P2000
    
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    
    # Disable steppers
    M84

[gcode_macro PARK_TOOLHEAD]
gcode:
    {% set Z_OFFSET = params.Z_OFFSET|default(0)|float %}
    {% set MAX_LAYER_Z = params.MAX_LAYER_Z|default(180)|float %}
    {% set MAX_PRINT_HEIGHT = params.MAX_PRINT_HEIGHT|default(180)|float %}
    
    { action_respond_info("[END_PRINT] Saving GCODE state") }
    SAVE_GCODE_STATE NAME=end_print
    
    # Use absolute coordinates
    G90
    { action_respond_info("[PARK_TOOLHEAD_DEBUG] Check Z-OFFSET: min({},{} => {})".format(
          (MAX_LAYER_Z+2),
          (MAX_PRINT_HEIGHT),
          ([MAX_LAYER_Z+2, MAX_PRINT_HEIGHT]|min),
        )) }
  
      { action_respond_info("[END_PRINT] Check retraction from print") }
      # Move nozzle away from print while retracting
      # Rise the nozzle only if it is not at maximum volume in Z+2
      { action_respond_info("[PARK_TOOLHEAD_DEBUG] Check: {}<{}".format(
          (MAX_LAYER_Z+2),
          (MAX_PRINT_HEIGHT),
        )) }
        
      {% if MAX_LAYER_Z + 2 < MAX_PRINT_HEIGHT %}
      { action_respond_info("[PARK_TOOLHEAD] Retracting Z+2") }
      
      {% set ZUP = Z_OFFSET + [MAX_LAYER_Z + 2, MAX_PRINT_HEIGHT]|min %}
      G1 Z{ZUP} F720
  
      {% endif %}
  
      { action_respond_info("[PARK_TOOLHEAD] Parking head") }
      # park print head
      G1 X170 Y170 F4200
      
      { action_respond_info("[PARK_TOOLHEAD] Check 2nd retraction") }
      # Rise the nozzle only if it is not at maximum volume in Z+50
      { action_respond_info("[PARK_TOOLHEAD_DEBUG] Check: {}<{}".format(
          (MAX_LAYER_Z+50),
          (MAX_PRINT_HEIGHT),
        )) }
      {% if MAX_LAYER_Z < MAX_PRINT_HEIGHT %}
      
        {% set ZUP = Z_OFFSET + [MAX_LAYER_Z + 50, MAX_PRINT_HEIGHT]|min %}
  
        { action_respond_info("[PARK_TOOLHEAD] Retracting Z+50") }
        G1 Z50 F720
  
      {% endif %}
    RESTORE_GCODE_STATE NAME=end_print
    